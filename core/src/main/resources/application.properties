spring.h2.console.enabled=true
spring.h2.console.path=/h2


#spring.datasource.driver-class-name=org.h2.Driver
#spring.datasource.initialize=true
#spring.datasource.url=jdbc:h2:tcp://localhost:8080/./product_db;DB_CLOSE_DELAY=-1;
spring.datasource.url=jdbc:h2:mem:product_db;DATABASE_TO_UPPER=false;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1;
spring.show_sql=true
spring.datasource.username=sa 
spring.datasource.password=
spring.datasource.driverClassName=org.h2.Driver
#spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=create
logging.level.org.hibernate.SQL=DEBUG
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#INIT=CREATE SCHEMA IF NOT EXISTS product_db;RUNSCRIPT FROM '~/data.sql'
#DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.driverClassName=org.h2.Driver
#hbm2ddl.auto=create-drop
#hibernate.hbm2ddl.auto=update
#spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
#spring.jpa.hibernate.ddl-auto=update
#INIT=CREATE SCHEMA IF NOT EXISTS product_db(u spring.datasource.url);MODE=MySQL;
#AUTO_RECONNECT=TRUE;INIT=create schema if not exists product_db;
#spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_ON_EXIT=FALSE
#spring.datasource.username=sa
#spring.datasource.password=
#spring.datasource.driverClassName=org.h2.Driver
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect